{"ast":null,"code":"import _classCallCheck from \"/home/joeffrey_garcia/react-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/joeffrey_garcia/react-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/joeffrey_garcia/react-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/joeffrey_garcia/react-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/joeffrey_garcia/react-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/joeffrey_garcia/react-project/src/components/benefit_datatable.js\";\nimport React, { Component } from 'react';\n\nvar $ = require('jquery');\n\n$.DataTable = require('datatables.net-se');\n$.DataTable = require('semantic-ui-react');\nexport var BenefitDatatable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BenefitDatatable, _Component);\n\n  function BenefitDatatable() {\n    _classCallCheck(this, BenefitDatatable);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BenefitDatatable).apply(this, arguments));\n  }\n\n  _createClass(BenefitDatatable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.$el = $(this.el);\n      this.$el.DataTable({\n        data: this.props.data,\n        columns: [{\n          title: \"<h4>Code</h4>\"\n        }, {\n          title: \"<h4>Name</h4>\"\n        }],\n        dom: \"<'ui grid'\" + \"<'row'\" + \"<'two wide column'f>\" + \"<'left aligned twelve wide column'i>\" + \">\" + \"<'row'\" + \"<'center aligned sixteen wide column'>\" + \">\" + \"<'row dt-table'\" + \"<'sixteen wide column'tr>\" + \">\" + \"<'row'\" + \"<'four wide column'l>\" + \"<'right aligned twelve wide column'p>\" + \"<'right aligned four wide column'>\" + \">\" + \">\",\n        renderer: 'semanticUI',\n        pagingType: \"full_numbers\",\n        scrollX: true,\n        language: {\n          info: \"_TOTAL_\",\n          infoEmpty: \"\",\n          emptyTable: \"No Records Found!\",\n          zeroRecords: \"No Matching Records Found!\",\n          search: \"\",\n          paginate: {\n            first: \"<i class='angle single left icon'></i> First\",\n            previous: \"<i class='angle double left icon'></i> Previous\",\n            next: \"Next <i class='angle double right icon'></i>\",\n            last: \"Last <i class='angle single right icon'></i>\"\n          }\n        },\n        \"drawCallback\": function drawCallback() {\n          add_search(this);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"ui very basic striped selectable table\",\n        style: {\n          cellspacing: \"0\",\n          width: \"100%\"\n        },\n        ref: function ref(el) {\n          return _this.el = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BenefitDatatable;\n}(Component);\n\nfunction add_search(table) {\n  var id = table[0].getAttribute(\"id\");\n  var value = $(\"#\".concat(id, \"_filter\")).val();\n  var results = $(\"#\".concat(id, \" >tbody >tr\")).length;\n  var total = $(\"#\".concat(id, \"_info\")).html();\n\n  if (results == 1) {\n    if ($(\"#\".concat(id, \" >tbody >tr >td.dataTables_empty\")).length > 0) {\n      $(\"#\".concat(id, \"_info\")).html(\"Showing 0 out of 0 \".concat(total, \" results\"));\n    } else {\n      $(\"#\".concat(id, \"_info\")).html(\"Showing \".concat(results, \" out of \").concat(total, \" results\"));\n    }\n  } else {\n    $(\"#\".concat(id, \"_info\")).html(\"Showing \".concat(results, \" out of \").concat(total, \" results\"));\n  }\n\n  if (value != 1) {\n    $(\"#\".concat(id, \"_filter\")).addClass('ui left icon input');\n    $(\"#\".concat(id, \"_filter\")).find('input[type=\"search\"]').unwrap();\n    $(\"#\".concat(id, \"_filter\")).find('input[type=\"search\"]').attr(\"placeholder\", \"Search\");\n    $(\"#\".concat(id, \"_filter\")).find('input[type=\"search\"]').append(\"</div>\");\n    $(\"#\".concat(id, \"_filter\")).val(1);\n  }\n}\n\nexport default BenefitDatatable;","map":{"version":3,"sources":["/home/joeffrey_garcia/react-project/src/components/benefit_datatable.js"],"names":["React","Component","$","require","DataTable","BenefitDatatable","$el","el","data","props","columns","title","dom","renderer","pagingType","scrollX","language","info","infoEmpty","emptyTable","zeroRecords","search","paginate","first","previous","next","last","add_search","width","cellspacing","table","id","getAttribute","value","val","results","length","total","html","addClass","find","unwrap","attr","append"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,IAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACAD,CAAC,CAACE,SAAF,GAAcD,OAAO,CAAC,mBAAD,CAArB;AACAD,CAAC,CAACE,SAAF,GAAcD,OAAO,CAAC,mBAAD,CAArB;AAEA,WAAaE,gBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCACwB;AAChB,WAAKC,GAAL,GAAWJ,CAAC,CAAC,KAAKK,EAAN,CAAZ;AACA,WAAKD,GAAL,CAASF,SAAT,CACI;AACII,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADrB;AAEIE,QAAAA,OAAO,EAAE,CACL;AAAEC,UAAAA,KAAK,EAAE;AAAT,SADK,EAEL;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAFK,CAFb;AAMIC,QAAAA,GAAG,EACC,eACA,QADA,GAEA,sBAFA,GAGA,sCAHA,GAIA,GAJA,GAKA,QALA,GAMA,wCANA,GAOA,GAPA,GAQA,iBARA,GASA,2BATA,GAUA,GAVA,GAWA,QAXA,GAYA,uBAZA,GAaA,uCAbA,GAcA,oCAdA,GAeA,GAfA,GAgBJ,GAvBJ;AAwBIC,QAAAA,QAAQ,EAAE,YAxBd;AAyBIC,QAAAA,UAAU,EAAE,cAzBhB;AA0BIC,QAAAA,OAAO,EAAE,IA1Bb;AA2BIC,QAAAA,QAAQ,EAAE;AACVC,UAAAA,IAAI,EAAE,SADI;AAEVC,UAAAA,SAAS,EAAE,EAFD;AAGVC,UAAAA,UAAU,EAAM,mBAHN;AAIVC,UAAAA,WAAW,EAAK,4BAJN;AAKVC,UAAAA,MAAM,EAAU,EALN;AAMVC,UAAAA,QAAQ,EAAE;AACRC,YAAAA,KAAK,EAAE,8CADC;AAERC,YAAAA,QAAQ,EAAE,iDAFF;AAGRC,YAAAA,IAAI,EAAE,8CAHE;AAIRC,YAAAA,IAAI,EAAE;AAJE;AANA,SA3Bd;AAwCE,wBAAgB,wBAAY;AAC1BC,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AA1CH,OADJ;AA8CH;AAjDL;AAAA;AAAA,6BAkDa;AAAA;;AACL,aAAO;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAO,QAAA,SAAS,EAAC,wCAAjB;AAA0D,QAAA,KAAK,EAAE;AAACC,UAAAA,WAAW,EAAE,GAAd;AAAmBD,UAAAA,KAAK,EAAE;AAA1B,SAAjE;AAAoG,QAAA,GAAG,EAAE,aAAArB,EAAE;AAAA,iBAAI,KAAI,CAACA,EAAL,GAAUA,EAAd;AAAA,SAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADG,CAAP;AAGH;AAtDL;;AAAA;AAAA,EAAsCN,SAAtC;;AAyDA,SAAS0B,UAAT,CAAoBG,KAApB,EAA0B;AACxB,MAAIC,EAAE,GAAGD,KAAK,CAAC,CAAD,CAAL,CAASE,YAAT,CAAsB,IAAtB,CAAT;AACA,MAAIC,KAAK,GAAG/B,CAAC,YAAK6B,EAAL,aAAD,CAAmBG,GAAnB,EAAZ;AACA,MAAIC,OAAO,GAAGjC,CAAC,YAAK6B,EAAL,iBAAD,CAAuBK,MAArC;AACA,MAAIC,KAAK,GAAGnC,CAAC,YAAK6B,EAAL,WAAD,CAAiBO,IAAjB,EAAZ;;AAEA,MAAGH,OAAO,IAAI,CAAd,EAAgB;AACd,QAAGjC,CAAC,YAAK6B,EAAL,sCAAD,CAA4CK,MAA5C,GAAqD,CAAxD,EAA0D;AACxDlC,MAAAA,CAAC,YAAK6B,EAAL,WAAD,CAAiBO,IAAjB,8BAA4CD,KAA5C;AACD,KAFD,MAGI;AACFnC,MAAAA,CAAC,YAAK6B,EAAL,WAAD,CAAiBO,IAAjB,mBAAiCH,OAAjC,qBAAmDE,KAAnD;AACD;AACF,GAPD,MAQI;AACFnC,IAAAA,CAAC,YAAK6B,EAAL,WAAD,CAAiBO,IAAjB,mBAAiCH,OAAjC,qBAAmDE,KAAnD;AACD;;AAED,MAAGJ,KAAK,IAAI,CAAZ,EAAc;AACZ/B,IAAAA,CAAC,YAAK6B,EAAL,aAAD,CAAmBQ,QAAnB,CAA4B,oBAA5B;AACArC,IAAAA,CAAC,YAAK6B,EAAL,aAAD,CAAmBS,IAAnB,CAAwB,sBAAxB,EAAgDC,MAAhD;AACAvC,IAAAA,CAAC,YAAK6B,EAAL,aAAD,CAAmBS,IAAnB,CAAwB,sBAAxB,EAAgDE,IAAhD,CAAqD,aAArD;AACAxC,IAAAA,CAAC,YAAK6B,EAAL,aAAD,CAAmBS,IAAnB,CAAwB,sBAAxB,EAAgDG,MAAhD;AACAzC,IAAAA,CAAC,YAAK6B,EAAL,aAAD,CAAmBG,GAAnB,CAAuB,CAAvB;AACD;AACF;;AAED,eAAe7B,gBAAf","sourcesContent":["import React, { Component } from 'react'\n\nconst $ = require('jquery')\n$.DataTable = require('datatables.net-se')\n$.DataTable = require('semantic-ui-react')\n\nexport class BenefitDatatable extends Component {\n    componentDidMount() {\n        this.$el = $(this.el)\n        this.$el.DataTable(\n            {\n                data: this.props.data,\n                columns: [\n                    { title: \"<h4>Code</h4>\" },\n                    { title: \"<h4>Name</h4>\" }\n                ],\n                dom:\n                    \"<'ui grid'\"+\n                    \"<'row'\"+\n                    \"<'two wide column'f>\"+\n                    \"<'left aligned twelve wide column'i>\"+\n                    \">\"+\n                    \"<'row'\"+\n                    \"<'center aligned sixteen wide column'>\"+\n                    \">\"+\n                    \"<'row dt-table'\"+\n                    \"<'sixteen wide column'tr>\"+\n                    \">\"+\n                    \"<'row'\"+\n                    \"<'four wide column'l>\"+\n                    \"<'right aligned twelve wide column'p>\"+\n                    \"<'right aligned four wide column'>\"+\n                    \">\"+\n                \">\",\n                renderer: 'semanticUI',\n                pagingType: \"full_numbers\",\n                scrollX: true,\n                language: {\n                info: \"_TOTAL_\",\n                infoEmpty: \"\",\n                emptyTable:     \"No Records Found!\",\n                zeroRecords:    \"No Matching Records Found!\",\n                search:         \"\",\n                paginate: {\n                  first: \"<i class='angle single left icon'></i> First\",\n                  previous: \"<i class='angle double left icon'></i> Previous\",\n                  next: \"Next <i class='angle double right icon'></i>\",\n                  last: \"Last <i class='angle single right icon'></i>\"\n                }\n              },\n              \"drawCallback\": function () {\n                add_search(this)\n              }\n            }\n        )\n    }\n    render() {\n        return <div style={{width: '100%'}}>\n            <table className=\"ui very basic striped selectable table\" style={{cellspacing: \"0\", width: \"100%\"}} ref={el => this.el = el}></table>\n        </div>\n    }\n}\n\nfunction add_search(table){\n  let id = table[0].getAttribute(\"id\")\n  let value = $(`#${id}_filter`).val()\n  let results = $(`#${id} >tbody >tr`).length\n  let total = $(`#${id}_info`).html()\n\n  if(results == 1){\n    if($(`#${id} >tbody >tr >td.dataTables_empty`).length > 0){\n      $(`#${id}_info`).html(`Showing 0 out of 0 ${total} results`)\n    }\n    else{\n      $(`#${id}_info`).html(`Showing ${results} out of ${total} results`)\n    }\n  }\n  else{\n    $(`#${id}_info`).html(`Showing ${results} out of ${total} results`)\n  }\n\n  if(value != 1){\n    $(`#${id}_filter`).addClass('ui left icon input')\n    $(`#${id}_filter`).find('input[type=\"search\"]').unwrap()\n    $(`#${id}_filter`).find('input[type=\"search\"]').attr(\"placeholder\", `Search`)\n    $(`#${id}_filter`).find('input[type=\"search\"]').append(`</div>`)\n    $(`#${id}_filter`).val(1)\n  }\n}\n\nexport default BenefitDatatable"]},"metadata":{},"sourceType":"module"}